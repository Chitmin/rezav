services:
  # Application Service (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME:-rezav}_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      # Pass environment variables from .env file
      XDEBUG_CONFIG: "client_host=host.docker.internal"
      # Laravel DB and Redis settings
      DB_CONNECTION: pgsql
      DB_HOST: db         # Connect to the 'db' service
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-rezav}
      DB_USERNAME: ${DB_USERNAME:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      REDIS_HOST: redis   # Connect to the 'redis' service
      REDIS_PASSWORD: ${REDIS_PASSWORD:-null}
      REDIS_PORT: ${REDIS_PORT:-6379}
      # Add other ENV vars needed by your app
    depends_on:
      - db
      - redis # App depends on Redis starting
    networks:
      - rezavnet

  # Nginx Web Server Service
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME:-rezav}_nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:80"
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    volumes:
      - .:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - rezavnet

  # PostgreSQL Service with PostGIS
  db:
    # Use the official PostGIS image (includes PostgreSQL)
    # Choose tag matching desired Postgres version, PostGIS version, and Alpine base
    image: ghcr.io/baosystems/postgis:16-3.5
    container_name: ${APP_NAME:-rezav}_db
    restart: unless-stopped
    platform: linux/arm64
    environment:
      POSTGRES_DB: ${DB_DATABASE:-rezav}
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      # Optional: Allow connections from any host within the Docker network
      # POSTGRES_HOST_AUTH_METHOD: trust # Be careful with this in non-dev environments
    volumes:
      - db_data:/var/lib/postgresql/data
      - './docker/pgsql/create-postgis-extension.sql:/docker-entrypoint-initdb.d/9-create-postgis-extension.sql'
      - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    ports:
      - "${DB_FORWARD_PORT:-54321}:5432" # Forward port for external connections if needed
    networks:
      - rezavnet
    # Optional: Add healthcheck
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-admin} -d ${DB_DATABASE:-rezav}"]
        interval: 10s
        timeout: 5s
        retries: 5

  # Redis Service
  redis:
    image: redis:alpine # Use Alpine for smaller image size
    container_name: ${APP_NAME:-rezav}_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data # Persist Redis data
    ports:
      # Forward port for external connections if needed (e.g., debugging)
      - "${REDIS_FORWARD_PORT:-63790}:6379"
    networks:
      - rezavnet
    # Optional: Add healthcheck
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

# Docker Networks
networks:
  rezavnet:
    driver: bridge

# Docker Volumes (for data persistence)
volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
